// <auto-generated />
using System;
using ChineseSneakers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChineseSneakers.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    partial class MyAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChineseSneakers.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("OrderModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.PaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("OrderModelId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SneakersId")
                        .HasColumnType("int");

                    b.Property<int?>("SneakersModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderModelId");

                    b.HasIndex("SneakersModelId");

                    b.ToTable("PaymentModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.ShopCartItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShopCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SneakersModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SneakersModelId");

                    b.ToTable("ShopCartItemModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.SneakersCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SneakersCategoryModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.SneakersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Article")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Female")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int?>("SneakersCategoryModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SneakersCategoryModelId");

                    b.ToTable("SneakersModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.PaymentModel", b =>
                {
                    b.HasOne("ChineseSneakers.Models.OrderModel", "OrderModel")
                        .WithMany("Payments")
                        .HasForeignKey("OrderModelId");

                    b.HasOne("ChineseSneakers.Models.SneakersModel", "SneakersModel")
                        .WithMany()
                        .HasForeignKey("SneakersModelId");

                    b.Navigation("OrderModel");

                    b.Navigation("SneakersModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.ShopCartItemModel", b =>
                {
                    b.HasOne("ChineseSneakers.Models.SneakersModel", "SneakersModel")
                        .WithMany()
                        .HasForeignKey("SneakersModelId");

                    b.Navigation("SneakersModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.SneakersModel", b =>
                {
                    b.HasOne("ChineseSneakers.Models.SneakersCategoryModel", "SneakersCategoryModel")
                        .WithMany()
                        .HasForeignKey("SneakersCategoryModelId");

                    b.Navigation("SneakersCategoryModel");
                });

            modelBuilder.Entity("ChineseSneakers.Models.OrderModel", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
